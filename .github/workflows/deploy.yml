name: Build and Push Docker Image to ECR with Cleanup

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::466436411559:role/football-etl-github-oidc-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: football-etl-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            --push .

      - name: Cleanup old Docker images tagged 'latest'
        env:
          AWS_REGION: eu-west-2
          ECR_REPOSITORY: football-etl-repo
        run: |
          # Get image digests with tag 'latest'
          images_to_delete=$(aws ecr list-images \
            --repository-name $ECR_REPOSITORY \
            --region $AWS_REGION \
            --filter "tagStatus=TAGGED" \
            --query 'imageIds[?contains(imageTag, `latest`)]' \
            --output json)
      
          echo "Images to delete: $images_to_delete"
      
          if [ "$images_to_delete" != "[]" ]; then
            aws ecr batch-delete-image \
              --repository-name $ECR_REPOSITORY \
              --region $AWS_REGION \
              --image-ids "$images_to_delete"
            echo "Deleted images tagged 'latest'."
          else
            echo "No images tagged 'latest' found to delete."
          fi

